import pygame as pg
from pygame.draw import rect, circle, polygon, aaline, ellipse


def ball_motion(obj, width, height, plr, enm):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –º—è—á–∞ –ø–æ –∏–≥—Ä–æ–≤–æ–º—É –ø–æ–ª—é
    :param obj: –∏–≥—Ä–æ–≤–æ–π –æ–±—ä–µ–∫—Ç-–º—è—á
    :param width: —à–∏—Ä–∏–Ω–∞ —ç–∫—Ä–∞–Ω–∞
    :param height: –≤—ã—Å–æ—Ç–∞ —ç–∫—Ä–∞–Ω–∞
    :param plr: –∏–≥—Ä–æ–≤–∞—è —Ä–∞–∫–µ—Ç–∫–∞
    :param enm: —Ä–∞–∫–µ—Ç–∫–∞-–≤—Ä–∞–≥
    :return: None
    """
    global ball_speed_x, ball_speed_y

    obj.x += ball_speed_x
    obj.y += ball_speed_y

    if obj.top <= 0 or obj.bottom > height:  # –µ—Å–ª–∏ –º—è—á —É–¥–∞—Ä–∏–ª—Å—è –æ–± –Ω–∏–∂–Ω—é—é –∏–ª–∏ –≤–µ—Ä—Ö–Ω—é—é —á–∞—Å—Ç—å —ç–∫—Ä–∞–Ω–∞
        ball_speed_y *= -1  # –Ω–∞–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –≤ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É
    elif obj.left <= 0 or obj.right > width:  # –µ—Å–ª–∏ –º—è—á —É–¥–∞—Ä–∏–ª—Å—è –æ–± –ø—Ä–∞–≤—É—é –∏–ª–∏ –ª–µ–≤—É—é –≥—Ä–∞–Ω–∏—Ü—É —ç–∫—Ä–∞–Ω–∞
        ball_speed_x *= -1  # –Ω–∞–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –≤ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É

    if obj.colliderect(plr) or obj.colliderect(enm):  # –µ—Å–ª–∏ –º—è—á –∫–æ—Å–Ω—É–ª—Å—è –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ –≤—Ä–∞–≥–∞
        ball_speed_x *= - 1  # –æ—Ç–±–∏—Ç—å –º—è—á –≤ –¥—Ä—É–≥—É—é —Å—Ç–æ—Ä–æ–Ω—É


W = 1280
H = 720
screen = pg.display.set_mode((W, H))
pg.display.set_caption('Pong game Pythonüèì')
clock = pg.time.Clock()

# Colors
bg_color = (224, 224, 224)
blue = (143, 218, 255)

# Game objects
ball = pg.Rect(W // 2 - 15, H // 2 - 15, 30, 30)
player = pg.Rect(W - 20, H // 2, 10, 150)
opponent = pg.Rect(10, H // 2, 10, 150)

# Game variables
speed = 8
ball_speed_x = speed
ball_speed_y = speed

finished = False
while not finished:
    clock.tick(30)
    for event in pg.event.get():
        if event.type == pg.QUIT:
            finished = True

    # Game logic
    ball_motion(ball, W, H, player, opponent)

    # Visuals
    screen.fill(bg_color)
    rect(screen, blue, player)
    rect(screen, blue, opponent)
    ellipse(screen, blue, ball)
    aaline(screen, blue, [W // 2, 0], [W // 2, H])

    pg.display.update()